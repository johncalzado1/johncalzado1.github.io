{"version":3,"sources":["webpack:///./src/pages/giveaway.js","webpack:///./node_modules/firebase/app/dist/index.cjs.js","webpack:///./node_modules/gatsby-plugin-firebase/src/firebase.js","webpack:///./node_modules/gatsby-plugin-firebase/index.js"],"names":["GiveAWay","React","useState","data","setData","useEffect","firebase","firestore","collection","onSnapshot","querySnapshot","names","forEach","doc","push","name","map","item","renderData","ex","registerVersion","module","exports","apps","length","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId"],"mappings":"2LAGe,SAASA,IAAY,IAAD,EAETC,IAAMC,SAAS,MAAhCC,EAF0B,KAEpBC,EAFoB,KAIjCH,IAAMI,WAAU,WACdC,IACGC,YACAC,WAAW,iBACXC,YAAW,SAACC,GACX,IAAIC,EAAQ,GACZD,EAAcE,SAAQ,SAAUC,GAC9BF,EAAMG,KAAKD,EAAIV,OAAOY,SAExBX,EAAQO,QAEX,IAMH,OAAO,6BAAMR,EAAO,4BAJD,SAACA,GAClB,OAAOA,EAAKa,KAAI,SAAAC,GAAI,OAAI,4BAAKA,MAGNC,CAAWf,IAAc,gB,kCClBpD,IAJyBgB,EAIrBb,GAJqBa,EAIM,EAAQ,UAHV,iBAAPA,GAAmB,YAAaA,EAAKA,EAAY,QAAIA,EAwB3Eb,EAASc,gBAnBE,WACG,SAkB0B,OACxCC,EAAOC,QAAUhB,G,2DC1BZA,IAASiB,KAAKC,QACjBlB,IAASmB,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,6BACfK,kBAAmBL,eACnBM,MAAON,4CACPO,mBAAeP,IAIJrB,QAAf,ECbeA","file":"component---src-pages-giveaway-js-d6948b4d3993316837c7.js","sourcesContent":["import React, { useState } from \"react\"\nimport firebase from \"gatsby-plugin-firebase\"\n\nexport default function GiveAWay() {\n\n  const [data, setData] = React.useState(null)\n\n  React.useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"/participants\")\n      .onSnapshot((querySnapshot) => {\n        var names = [];\n        querySnapshot.forEach(function (doc) {\n          names.push(doc.data().name);\n        });\n        setData(names)\n      })\n  }, [])\n\n  const renderData = (data) => {\n    return data.map(item => <li>{item}</li>)\n  }\n\n  return <div>{data ? <ul>{renderData(data)}</ul> : \"Loading...\"}</div>\n\n}\n","'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar name = \"firebase\";\nvar version = \"7.15.0\";\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfirebase.registerVersion(name, version, 'app');\nmodule.exports = firebase;","import firebase from \"firebase/app\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_APP_ID,\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID\n  });\n}\n\nexport default firebase;\n","import firebase from \"./src/firebase\";\n\nexport default firebase;\n"],"sourceRoot":""}